### Originally generated by Winemaker 0.8.3

SRCDIR                = .
SUBDIRS               = libseh d3dx8 jpeg-8d
DLLS                  = cxbx.dll
LIBS                  =
EXES                  = cxbx.exe loader.exe

### Common settings

TARGETFLAGS           = -m32
CEXTRA                = -g -O0 -Wall -Wextra
CXXEXTRA              = $(TARGETFLAGS) -mno-cygwin -g -O0 -W -Wno-sign-compare -Wno-missing-field-initializers -Wno-ignored-qualifiers -Wno-write-strings -fpermissive -isystem /usr/local/include/wine/windows -isystem /usr/include/wine/windows
RCEXTRA               =
DEFINES               = -DNOMINMAX -D_GLIBCXX_USE_C99_DYNAMIC -DWIN32 -D_DEBUG -D_WINDOWS -D_CRT_SECURE_NO_WARNINGS# -DD3D9
INCLUDE_PATH          = -Ilibseh -Id3dx8/include -Ijpeg-8d -I../../src -I../../src/Common -I../../src/Common/Linux -I../../src/CxbxKrnl -I../../import/OpenXDK -I../../import/OpenXDK/include
DLL_PATH              =
DLL_IMPORTS           =
LIBRARY_PATH          =
LIBRARIES             =

### cxbx.dll sources and settings

cxbx_dll_MODULE       = cxbx.dll
cxbx_dll_C_SRCS       =
cxbx_dll_CXX_SRCS     = ../../src/Common/Error.cpp \
			../../src/Common/OpenXDK.cpp \
			../../src/Common/Win32/EmuShared.cpp \
			../../src/Common/Win32/Mutex.cpp \
			../../src/Common/Win32/XBController.cpp \
			../../src/Common/Win32/XBVideo.cpp \
			../../src/Common/Xbe.cpp \
			../../src/CxbxKrnl/CxbxKrnl.cpp \
			../../src/CxbxKrnl/DbgConsole.cpp \
			../../src/CxbxKrnl/Emu.cpp \
			../../src/CxbxKrnl/EmuAlloc.cpp \
			../../src/CxbxKrnl/EmuD3D8.cpp \
			../../src/CxbxKrnl/EmuD3D8/Convert.cpp \
			../../src/CxbxKrnl/EmuD3D8/PixelShader.cpp \
			../../src/CxbxKrnl/EmuD3D8/PushBuffer.cpp \
			../../src/CxbxKrnl/EmuD3D8/State.cpp \
			../../src/CxbxKrnl/EmuD3D8/VertexBuffer.cpp \
			../../src/CxbxKrnl/EmuD3D8/VertexShader.cpp \
			../../src/CxbxKrnl/EmuDInput.cpp \
			../../src/CxbxKrnl/EmuDSound.cpp \
			../../src/CxbxKrnl/EmuFS.cpp \
			../../src/CxbxKrnl/EmuFile.cpp \
			../../src/CxbxKrnl/EmuKrnl.cpp \
			../../src/CxbxKrnl/EmuLDT.cpp \
			../../src/CxbxKrnl/EmuNtDll.cpp \
			../../src/CxbxKrnl/EmuXBAudio/XSoundBank.cpp \
			../../src/CxbxKrnl/EmuXBAudio/XWaveBank.cpp \
			../../src/CxbxKrnl/EmuXBAudio/XboxAdpcm.cpp \
			../../src/CxbxKrnl/EmuXG.cpp \
			../../src/CxbxKrnl/EmuXInput.cpp \
			../../src/CxbxKrnl/EmuXOnline.cpp \
			../../src/CxbxKrnl/EmuXactEng.cpp \
			../../src/CxbxKrnl/EmuXapi.cpp \
			../../src/CxbxKrnl/HLEDataBase.cpp \
			../../src/CxbxKrnl/HLEIntercept.cpp \
			../../src/CxbxKrnl/KernelThunk.cpp \
			../../src/CxbxKrnl/ResourceTracker.cpp
cxbx_dll_RC_SRCS      =
cxbx_dll_LDFLAGS      = -shared $(TARGETFLAGS) -mno-cygwin -mwindows -g -O0 $(cxbx_dll_MODULE:.dll=.spec)
cxbx_dll_ARFLAGS      =
cxbx_dll_DLL_PATH     = -Ld3dx8
cxbx_dll_DLLS         = dxerr8 xinput ws2_32 dsound winmm ddraw d3dx8 d3d8 dinput dinput8 dxguid uuid dbghelp
cxbx_dll_LIBRARY_PATH =
cxbx_dll_LIBRARIES    = libseh/libseh.a
cxbx_dll_OBJS         = $(cxbx_dll_C_SRCS:.c=.o) $(cxbx_dll_CXX_SRCS:.cpp=.o) $(cxbx_dll_RC_SRCS:.rc=.res)

### cxbx.exe sources and settings

cxbx_exe_MODULE       = cxbx.exe
cxbx_exe_C_SRCS       =
cxbx_exe_CXX_SRCS     = ../../src/Common/Exe.cpp \
			../../src/Cxbx/DlgControllerConfig.cpp \
			../../src/Cxbx/DlgVideoConfig.cpp \
			../../src/Cxbx/EmuExe.cpp \
			../../src/Cxbx/Prolog.cpp \
			../../src/Cxbx/WinMain.cpp \
			../../src/Cxbx/Wnd.cpp \
			../../src/Cxbx/WndAbout.cpp \
			../../src/Cxbx/WndMain.cpp \
			../../src/Cxbx/jpegdec/jpegdec.cpp
cxbx_exe_RC_SRCS      = ../../resource/Cxbx.rc
cxbx_exe_LDFLAGS      = $(TARGETFLAGS) -mno-cygwin -mwindows -g -O0
cxbx_exe_ARFLAGS      =
cxbx_exe_DLL_PATH     = -L.
cxbx_exe_DLLS         = d3d8 cxbx
cxbx_exe_LIBRARY_PATH =
cxbx_exe_LIBRARIES    = jpeg-8d/libjpeg.a
cxbx_exe_OBJS         = $(cxbx_exe_C_SRCS:.c=.o) $(cxbx_exe_CXX_SRCS:.cpp=.o) $(cxbx_exe_RC_SRCS:.rc=.res)

### loader.exe sources and settings

loader_exe_MODULE       = loader.exe
loader_exe_C_SRCS       = loader.c
loader_exe_CXX_SRCS     =
loader_exe_RC_SRCS      =
loader_exe_LDFLAGS      = $(TARGETFLAGS) -g -O0
loader_exe_ARFLAGS      =
loader_exe_DLL_PATH     = -L.
loader_exe_DLLS         = cxbx
loader_exe_LIBRARY_PATH =
loader_exe_LIBRARIES    =
loader_exe_OBJS         = $(loader_exe_C_SRCS:.c=.o) $(loader_exe_CXX_SRCS:.cpp=.o) $(loader_exe_RC_SRCS:.rc=.res)

### Global source lists

C_SRCS                = $(cxbx_dll_C_SRCS) $(cxbx_exe_C_SRCS) $(loader_exe_C_SRCS)
CXX_SRCS              = $(cxbx_dll_CXX_SRCS) $(cxbx_exe_CXX_SRCS) $(loader_exe_CXX_SRCS)
RC_SRCS               = $(cxbx_dll_RC_SRCS) $(cxbx_exe_RC_SRCS) $(loader_exe_RC_SRCS)

### Tools

WINEBUILD             = winebuild
CC                    = winegcc
CXX                   = wineg++
RC                    = wrc
AR                    = ar

### Generic targets

all: $(SUBDIRS) $(DLLS:%=%.so) $(LIBS) $(EXES)

### Build rules

.PHONY: all clean dummy

$(SUBDIRS): dummy
	@cd $@ && $(MAKE)

# Implicit rules

.SUFFIXES: .cpp .cxx .rc .res
DEFINCL = $(INCLUDE_PATH) $(DEFINES) $(OPTIONS)

.c.o:
	$(CC) -c $(CFLAGS) $(CEXTRA) $(DEFINCL) -o $@ $<

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.rc.res:
	$(RC) $(RCFLAGS) $(RCEXTRA) $(DEFINCL) -fo$@ $<

# Rules for cleaning

#CLEAN_FILES     = y.tab.c y.tab.h lex.yy.c core *.orig *.rej \
#                  \\\#*\\\# *~ *% .\\\#*

clean:: $(SUBDIRS:%=%/__clean__) $(EXTRASUBDIRS:%=%/__clean__)
	$(RM) $(CLEAN_FILES) $(RC_SRCS:.rc=.res) $(C_SRCS:.c=.o) $(CXX_SRCS:.cpp=.o)
	$(RM) $(DLLS:%=%.so) $(LIBS) $(EXES) $(EXES:%=%.so)
	$(RM) lib$(cxbx_dll_MODULE:.dll=.def)

$(SUBDIRS:%=%/__clean__): dummy
	cd `dirname $@` && $(MAKE) clean

$(EXTRASUBDIRS:%=%/__clean__): dummy
	-cd `dirname $@` && $(RM) $(CLEAN_FILES)

### Target specific build rules
DEFLIB = $(LIBRARY_PATH) $(LIBRARIES) $(DLL_PATH) $(DLL_IMPORTS:%=-l%)

$(cxbx_dll_MODULE).so: $(cxbx_dll_OBJS) $(cxbx_dll_MODULE:.dll=.spec)
	$(CXX) $(cxbx_dll_LDFLAGS) -o $@ $(cxbx_dll_OBJS) $(DEFLIB) $(cxbx_dll_DLL_PATH) $(cxbx_dll_DLLS:%=-l%) $(cxbx_dll_LIBRARY_PATH) $(cxbx_dll_LIBRARIES)

lib$(cxbx_dll_MODULE:.dll=.def): $(cxbx_dll_MODULE:.dll=.spec)
	$(WINEBUILD) $(TARGETFLAGS) -w --def -o $@ --export $<

$(cxbx_exe_MODULE): $(cxbx_exe_OBJS) $(cxbx_dll_MODULE).so lib$(cxbx_dll_MODULE:.dll=.def)
	$(CXX) $(cxbx_exe_LDFLAGS) -o $@ $(cxbx_exe_OBJS) $(DEFLIB) $(cxbx_exe_DLL_PATH) $(cxbx_exe_DLLS:%=-l%) $(cxbx_exe_LIBRARY_PATH) $(cxbx_exe_LIBRARIES)

$(loader_exe_MODULE): $(loader_exe_OBJS) $(cxbx_dll_MODULE).so lib$(cxbx_dll_MODULE:.dll=.def)
	$(CC) $(loader_exe_LDFLAGS) -o $@ $(loader_exe_OBJS) $(DEFLIB) $(loader_exe_DLL_PATH) $(loader_exe_DLLS:%=-l%) $(loader_exe_LIBRARY_PATH) $(loader_exe_LIBRARIES)

